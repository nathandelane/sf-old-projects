#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nathandelane.WatiN.VehixTesting.Data.VehixFoundation
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="VehixFoundation")]
	public partial class VehixFoundationCensorshipDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCensoredTypeBindingTable(CensoredTypeBindingTable instance);
    partial void UpdateCensoredTypeBindingTable(CensoredTypeBindingTable instance);
    partial void DeleteCensoredTypeBindingTable(CensoredTypeBindingTable instance);
    partial void InsertCensorshipEvaluationTable(CensorshipEvaluationTable instance);
    partial void UpdateCensorshipEvaluationTable(CensorshipEvaluationTable instance);
    partial void DeleteCensorshipEvaluationTable(CensorshipEvaluationTable instance);
    #endregion
		
		public VehixFoundationCensorshipDataContext() : 
				base(global::Nathandelane.WatiN.VehixTesting.Data.Properties.Settings.Default.VehixFoundationConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VehixFoundationCensorshipDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehixFoundationCensorshipDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehixFoundationCensorshipDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehixFoundationCensorshipDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CensoredTypeBindingTable> CensoredTypeBindingTables
		{
			get
			{
				return this.GetTable<CensoredTypeBindingTable>();
			}
		}
		
		public System.Data.Linq.Table<RegExCensorshipEvaluationTable> RegExCensorshipEvaluationTables
		{
			get
			{
				return this.GetTable<RegExCensorshipEvaluationTable>();
			}
		}
		
		public System.Data.Linq.Table<CensorshipEvaluationTable> CensorshipEvaluationTables
		{
			get
			{
				return this.GetTable<CensorshipEvaluationTable>();
			}
		}
		
		public System.Data.Linq.Table<CustomCensorshipEvaluationTable> CustomCensorshipEvaluationTables
		{
			get
			{
				return this.GetTable<CustomCensorshipEvaluationTable>();
			}
		}
	}
	
	[Table(Name="Censorship.CensoredTypeBindingTable")]
	public partial class CensoredTypeBindingTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private string _TargetType;
		
		private string _Member;
		
		private long _Evaluation;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private EntityRef<CensorshipEvaluationTable> _CensorshipEvaluationTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnTargetTypeChanging(string value);
    partial void OnTargetTypeChanged();
    partial void OnMemberChanging(string value);
    partial void OnMemberChanged();
    partial void OnEvaluationChanging(long value);
    partial void OnEvaluationChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public CensoredTypeBindingTable()
		{
			this._CensorshipEvaluationTable = default(EntityRef<CensorshipEvaluationTable>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_TargetType", DbType="NVarChar(400) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Member", DbType="NVarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Member
		{
			get
			{
				return this._Member;
			}
			set
			{
				if ((this._Member != value))
				{
					this.OnMemberChanging(value);
					this.SendPropertyChanging();
					this._Member = value;
					this.SendPropertyChanged("Member");
					this.OnMemberChanged();
				}
			}
		}
		
		[Column(Storage="_Evaluation", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Evaluation
		{
			get
			{
				return this._Evaluation;
			}
			set
			{
				if ((this._Evaluation != value))
				{
					if (this._CensorshipEvaluationTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationChanging(value);
					this.SendPropertyChanging();
					this._Evaluation = value;
					this.SendPropertyChanged("Evaluation");
					this.OnEvaluationChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		[Association(Name="CensorshipEvaluationTable_CensoredTypeBindingTable", Storage="_CensorshipEvaluationTable", ThisKey="Evaluation", OtherKey="ID", IsForeignKey=true)]
		public CensorshipEvaluationTable CensorshipEvaluationTable
		{
			get
			{
				return this._CensorshipEvaluationTable.Entity;
			}
			set
			{
				CensorshipEvaluationTable previousValue = this._CensorshipEvaluationTable.Entity;
				if (((previousValue != value) 
							|| (this._CensorshipEvaluationTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CensorshipEvaluationTable.Entity = null;
						previousValue.CensoredTypeBindingTables.Remove(this);
					}
					this._CensorshipEvaluationTable.Entity = value;
					if ((value != null))
					{
						value.CensoredTypeBindingTables.Add(this);
						this._Evaluation = value.ID;
					}
					else
					{
						this._Evaluation = default(long);
					}
					this.SendPropertyChanged("CensorshipEvaluationTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="Censorship.RegExCensorshipEvaluationTable")]
	public partial class RegExCensorshipEvaluationTable
	{
		
		private long _ID;
		
		private int _Behavior;
		
		private string _Expression;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public RegExCensorshipEvaluationTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Behavior", DbType="Int NOT NULL")]
		public int Behavior
		{
			get
			{
				return this._Behavior;
			}
			set
			{
				if ((this._Behavior != value))
				{
					this._Behavior = value;
				}
			}
		}
		
		[Column(Storage="_Expression", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Expression
		{
			get
			{
				return this._Expression;
			}
			set
			{
				if ((this._Expression != value))
				{
					this._Expression = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Censorship.CensorshipEvaluationTable")]
	public partial class CensorshipEvaluationTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private string _Name;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private EntitySet<CensoredTypeBindingTable> _CensoredTypeBindingTables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public CensorshipEvaluationTable()
		{
			this._CensoredTypeBindingTables = new EntitySet<CensoredTypeBindingTable>(new Action<CensoredTypeBindingTable>(this.attach_CensoredTypeBindingTables), new Action<CensoredTypeBindingTable>(this.detach_CensoredTypeBindingTables));
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		[Association(Name="CensorshipEvaluationTable_CensoredTypeBindingTable", Storage="_CensoredTypeBindingTables", ThisKey="ID", OtherKey="Evaluation")]
		public EntitySet<CensoredTypeBindingTable> CensoredTypeBindingTables
		{
			get
			{
				return this._CensoredTypeBindingTables;
			}
			set
			{
				this._CensoredTypeBindingTables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CensoredTypeBindingTables(CensoredTypeBindingTable entity)
		{
			this.SendPropertyChanging();
			entity.CensorshipEvaluationTable = this;
		}
		
		private void detach_CensoredTypeBindingTables(CensoredTypeBindingTable entity)
		{
			this.SendPropertyChanging();
			entity.CensorshipEvaluationTable = null;
		}
	}
	
	[Table(Name="Censorship.CustomCensorshipEvaluationTable")]
	public partial class CustomCensorshipEvaluationTable
	{
		
		private long _ID;
		
		private string _EvaluatorType;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public CustomCensorshipEvaluationTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_EvaluatorType", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string EvaluatorType
		{
			get
			{
				return this._EvaluatorType;
			}
			set
			{
				if ((this._EvaluatorType != value))
				{
					this._EvaluatorType = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
}
#pragma warning restore 1591

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nathandelane.WatiN.VehixTesting.Data.VehixFoundation
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="VehixFoundation")]
	public partial class VehixFoundationRfiDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertApprovalHandlerTable(ApprovalHandlerTable instance);
    partial void UpdateApprovalHandlerTable(ApprovalHandlerTable instance);
    partial void DeleteApprovalHandlerTable(ApprovalHandlerTable instance);
    partial void InsertHandlerEvaluatorTable(HandlerEvaluatorTable instance);
    partial void UpdateHandlerEvaluatorTable(HandlerEvaluatorTable instance);
    partial void DeleteHandlerEvaluatorTable(HandlerEvaluatorTable instance);
    partial void InsertHandlerTemplateEvaluatorTable(HandlerTemplateEvaluatorTable instance);
    partial void UpdateHandlerTemplateEvaluatorTable(HandlerTemplateEvaluatorTable instance);
    partial void DeleteHandlerTemplateEvaluatorTable(HandlerTemplateEvaluatorTable instance);
    partial void InsertLocaleHandlerConditionMakeDistributionTable(LocaleHandlerConditionMakeDistributionTable instance);
    partial void UpdateLocaleHandlerConditionMakeDistributionTable(LocaleHandlerConditionMakeDistributionTable instance);
    partial void DeleteLocaleHandlerConditionMakeDistributionTable(LocaleHandlerConditionMakeDistributionTable instance);
    partial void InsertPartyHandlerCategoryTable(PartyHandlerCategoryTable instance);
    partial void UpdatePartyHandlerCategoryTable(PartyHandlerCategoryTable instance);
    partial void DeletePartyHandlerCategoryTable(PartyHandlerCategoryTable instance);
    partial void InsertRequestHandlerTable(RequestHandlerTable instance);
    partial void UpdateRequestHandlerTable(RequestHandlerTable instance);
    partial void DeleteRequestHandlerTable(RequestHandlerTable instance);
    partial void InsertRequestSourceTable(RequestSourceTable instance);
    partial void UpdateRequestSourceTable(RequestSourceTable instance);
    partial void DeleteRequestSourceTable(RequestSourceTable instance);
    partial void InsertRequestTypeCategoryTable(RequestTypeCategoryTable instance);
    partial void UpdateRequestTypeCategoryTable(RequestTypeCategoryTable instance);
    partial void DeleteRequestTypeCategoryTable(RequestTypeCategoryTable instance);
    partial void InsertSellerInfoHandlerConditionMakeTable(SellerInfoHandlerConditionMakeTable instance);
    partial void UpdateSellerInfoHandlerConditionMakeTable(SellerInfoHandlerConditionMakeTable instance);
    partial void DeleteSellerInfoHandlerConditionMakeTable(SellerInfoHandlerConditionMakeTable instance);
    partial void InsertSourceTypeCategoryTable(SourceTypeCategoryTable instance);
    partial void UpdateSourceTypeCategoryTable(SourceTypeCategoryTable instance);
    partial void DeleteSourceTypeCategoryTable(SourceTypeCategoryTable instance);
    #endregion
		
		public VehixFoundationRfiDataContext() : 
				base(global::Nathandelane.WatiN.VehixTesting.Data.Properties.Settings.Default.VehixFoundationConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VehixFoundationRfiDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehixFoundationRfiDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehixFoundationRfiDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehixFoundationRfiDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ApprovalHandlerTable> ApprovalHandlerTables
		{
			get
			{
				return this.GetTable<ApprovalHandlerTable>();
			}
		}
		
		public System.Data.Linq.Table<YearRangeFilterEvaluatorTable> YearRangeFilterEvaluatorTables
		{
			get
			{
				return this.GetTable<YearRangeFilterEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<BodyStyleFilterEvaluatorTable> BodyStyleFilterEvaluatorTables
		{
			get
			{
				return this.GetTable<BodyStyleFilterEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<CapacityFilterEvaluatorTable> CapacityFilterEvaluatorTables
		{
			get
			{
				return this.GetTable<CapacityFilterEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<ConditionFilterEvaluatorTable> ConditionFilterEvaluatorTables
		{
			get
			{
				return this.GetTable<ConditionFilterEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<ConditionRadiusFilterEvaluatorTable> ConditionRadiusFilterEvaluatorTables
		{
			get
			{
				return this.GetTable<ConditionRadiusFilterEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<ContactMethodHandlerTable> ContactMethodHandlerTables
		{
			get
			{
				return this.GetTable<ContactMethodHandlerTable>();
			}
		}
		
		public System.Data.Linq.Table<DateMetricEvaluatorTable> DateMetricEvaluatorTables
		{
			get
			{
				return this.GetTable<DateMetricEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<DistanceMetricEvaluatorTable> DistanceMetricEvaluatorTables
		{
			get
			{
				return this.GetTable<DistanceMetricEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<EpaMarketClassFilterEvaluatorTable> EpaMarketClassFilterEvaluatorTables
		{
			get
			{
				return this.GetTable<EpaMarketClassFilterEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<EvaluatorTable> EvaluatorTables
		{
			get
			{
				return this.GetTable<EvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<ExtendedBodyStyleFilterEvaluatorTable> ExtendedBodyStyleFilterEvaluatorTables
		{
			get
			{
				return this.GetTable<ExtendedBodyStyleFilterEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<FilterEvaluatorTable> FilterEvaluatorTables
		{
			get
			{
				return this.GetTable<FilterEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<HandlerEvaluatorTable> HandlerEvaluatorTables
		{
			get
			{
				return this.GetTable<HandlerEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<HandlerTable> HandlerTables
		{
			get
			{
				return this.GetTable<HandlerTable>();
			}
		}
		
		public System.Data.Linq.Table<HandlerTemplateEvaluatorTable> HandlerTemplateEvaluatorTables
		{
			get
			{
				return this.GetTable<HandlerTemplateEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<HandlerTemplateTable> HandlerTemplateTables
		{
			get
			{
				return this.GetTable<HandlerTemplateTable>();
			}
		}
		
		public System.Data.Linq.Table<HttpSourceTable> HttpSourceTables
		{
			get
			{
				return this.GetTable<HttpSourceTable>();
			}
		}
		
		public System.Data.Linq.Table<InventoryVehicleRequestTable> InventoryVehicleRequestTables
		{
			get
			{
				return this.GetTable<InventoryVehicleRequestTable>();
			}
		}
		
		public System.Data.Linq.Table<JumpStartAutomotiveHandlerTable> JumpStartAutomotiveHandlerTables
		{
			get
			{
				return this.GetTable<JumpStartAutomotiveHandlerTable>();
			}
		}
		
		public System.Data.Linq.Table<LocaleHandlerConditionMakeDistributionTable> LocaleHandlerConditionMakeDistributionTables
		{
			get
			{
				return this.GetTable<LocaleHandlerConditionMakeDistributionTable>();
			}
		}
		
		public System.Data.Linq.Table<LocaleHandlerPriorityOptionsTable> LocaleHandlerPriorityOptionsTables
		{
			get
			{
				return this.GetTable<LocaleHandlerPriorityOptionsTable>();
			}
		}
		
		public System.Data.Linq.Table<LocaleHandlerTable> LocaleHandlerTables
		{
			get
			{
				return this.GetTable<LocaleHandlerTable>();
			}
		}
		
		public System.Data.Linq.Table<MakeFilterEvaluatorTable> MakeFilterEvaluatorTables
		{
			get
			{
				return this.GetTable<MakeFilterEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<MetricEvaluatorTable> MetricEvaluatorTables
		{
			get
			{
				return this.GetTable<MetricEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<PartyContactMethodHandlerTable> PartyContactMethodHandlerTables
		{
			get
			{
				return this.GetTable<PartyContactMethodHandlerTable>();
			}
		}
		
		public System.Data.Linq.Table<PartyHandlerCategoryTable> PartyHandlerCategoryTables
		{
			get
			{
				return this.GetTable<PartyHandlerCategoryTable>();
			}
		}
		
		public System.Data.Linq.Table<PartyHandlerTable> PartyHandlerTables
		{
			get
			{
				return this.GetTable<PartyHandlerTable>();
			}
		}
		
		public System.Data.Linq.Table<PreferenceMetricEvaluatorTable> PreferenceMetricEvaluatorTables
		{
			get
			{
				return this.GetTable<PreferenceMetricEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<QuotaMetricEvaluatorTable> QuotaMetricEvaluatorTables
		{
			get
			{
				return this.GetTable<QuotaMetricEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<RegexFilterEvaluatorTable> RegexFilterEvaluatorTables
		{
			get
			{
				return this.GetTable<RegexFilterEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<RequestHandlerTable> RequestHandlerTables
		{
			get
			{
				return this.GetTable<RequestHandlerTable>();
			}
		}
		
		public System.Data.Linq.Table<RequestHashHistoryTable> RequestHashHistoryTables
		{
			get
			{
				return this.GetTable<RequestHashHistoryTable>();
			}
		}
		
		public System.Data.Linq.Table<RequestSourceTable> RequestSourceTables
		{
			get
			{
				return this.GetTable<RequestSourceTable>();
			}
		}
		
		public System.Data.Linq.Table<RequestTable> RequestTables
		{
			get
			{
				return this.GetTable<RequestTable>();
			}
		}
		
		public System.Data.Linq.Table<RequestTypeCategoryTable> RequestTypeCategoryTables
		{
			get
			{
				return this.GetTable<RequestTypeCategoryTable>();
			}
		}
		
		public System.Data.Linq.Table<ResearchVehicleModelRequestTable> ResearchVehicleModelRequestTables
		{
			get
			{
				return this.GetTable<ResearchVehicleModelRequestTable>();
			}
		}
		
		public System.Data.Linq.Table<ResearchVehiclePreviewRequestTable> ResearchVehiclePreviewRequestTables
		{
			get
			{
				return this.GetTable<ResearchVehiclePreviewRequestTable>();
			}
		}
		
		public System.Data.Linq.Table<ResearchVehicleRequestTable> ResearchVehicleRequestTables
		{
			get
			{
				return this.GetTable<ResearchVehicleRequestTable>();
			}
		}
		
		public System.Data.Linq.Table<ResearchVehicleTrimRequestTable> ResearchVehicleTrimRequestTables
		{
			get
			{
				return this.GetTable<ResearchVehicleTrimRequestTable>();
			}
		}
		
		public System.Data.Linq.Table<SellerInfoContactMethodHandlerTable> SellerInfoContactMethodHandlerTables
		{
			get
			{
				return this.GetTable<SellerInfoContactMethodHandlerTable>();
			}
		}
		
		public System.Data.Linq.Table<SellerInfoHandlerConditionMakeTable> SellerInfoHandlerConditionMakeTables
		{
			get
			{
				return this.GetTable<SellerInfoHandlerConditionMakeTable>();
			}
		}
		
		public System.Data.Linq.Table<SellerInfoHandlerTable> SellerInfoHandlerTables
		{
			get
			{
				return this.GetTable<SellerInfoHandlerTable>();
			}
		}
		
		public System.Data.Linq.Table<SourceFilterEvaluatorTable> SourceFilterEvaluatorTables
		{
			get
			{
				return this.GetTable<SourceFilterEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<SourceTable> SourceTables
		{
			get
			{
				return this.GetTable<SourceTable>();
			}
		}
		
		public System.Data.Linq.Table<SourceTypeCategoryTable> SourceTypeCategoryTables
		{
			get
			{
				return this.GetTable<SourceTypeCategoryTable>();
			}
		}
		
		public System.Data.Linq.Table<TollFreeRequestTable> TollFreeRequestTables
		{
			get
			{
				return this.GetTable<TollFreeRequestTable>();
			}
		}
		
		public System.Data.Linq.Table<ValidationFilterEvaluatorTable> ValidationFilterEvaluatorTables
		{
			get
			{
				return this.GetTable<ValidationFilterEvaluatorTable>();
			}
		}
		
		public System.Data.Linq.Table<VehicleRequestTable> VehicleRequestTables
		{
			get
			{
				return this.GetTable<VehicleRequestTable>();
			}
		}
	}
	
	[Table(Name="Rfi.ApprovalHandlerTable")]
	public partial class ApprovalHandlerTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Label;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public ApprovalHandlerTable()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Label", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="Rfi.YearRangeFilterEvaluatorTable")]
	public partial class YearRangeFilterEvaluatorTable
	{
		
		private long _ID;
		
		private short _From;
		
		private short _To;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public YearRangeFilterEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Name="[From]", Storage="_From", DbType="SmallInt NOT NULL")]
		public short From
		{
			get
			{
				return this._From;
			}
			set
			{
				if ((this._From != value))
				{
					this._From = value;
				}
			}
		}
		
		[Column(Name="[To]", Storage="_To", DbType="SmallInt NOT NULL")]
		public short To
		{
			get
			{
				return this._To;
			}
			set
			{
				if ((this._To != value))
				{
					this._To = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.BodyStyleFilterEvaluatorTable")]
	public partial class BodyStyleFilterEvaluatorTable
	{
		
		private long _ID;
		
		private long _BodyStyle;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public BodyStyleFilterEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_BodyStyle", DbType="BigInt NOT NULL")]
		public long BodyStyle
		{
			get
			{
				return this._BodyStyle;
			}
			set
			{
				if ((this._BodyStyle != value))
				{
					this._BodyStyle = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.CapacityFilterEvaluatorTable")]
	public partial class CapacityFilterEvaluatorTable
	{
		
		private long _ID;
		
		private int _Capacity;
		
		private string _Peroid;
		
		private System.DateTime _LastAcceptanceDate;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public CapacityFilterEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Capacity", DbType="Int NOT NULL")]
		public int Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this._Capacity = value;
				}
			}
		}
		
		[Column(Storage="_Peroid", DbType="VarChar(27) NOT NULL", CanBeNull=false)]
		public string Peroid
		{
			get
			{
				return this._Peroid;
			}
			set
			{
				if ((this._Peroid != value))
				{
					this._Peroid = value;
				}
			}
		}
		
		[Column(Storage="_LastAcceptanceDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastAcceptanceDate
		{
			get
			{
				return this._LastAcceptanceDate;
			}
			set
			{
				if ((this._LastAcceptanceDate != value))
				{
					this._LastAcceptanceDate = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.ConditionFilterEvaluatorTable")]
	public partial class ConditionFilterEvaluatorTable
	{
		
		private long _ID;
		
		private int _Condition;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public ConditionFilterEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Condition", DbType="Int NOT NULL")]
		public int Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this._Condition = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.ConditionRadiusFilterEvaluatorTable")]
	public partial class ConditionRadiusFilterEvaluatorTable
	{
		
		private long _ID;
		
		private double _Radius;
		
		private int _Scale;
		
		private int _Condition;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public ConditionRadiusFilterEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Radius", DbType="Float NOT NULL")]
		public double Radius
		{
			get
			{
				return this._Radius;
			}
			set
			{
				if ((this._Radius != value))
				{
					this._Radius = value;
				}
			}
		}
		
		[Column(Storage="_Scale", DbType="Int NOT NULL")]
		public int Scale
		{
			get
			{
				return this._Scale;
			}
			set
			{
				if ((this._Scale != value))
				{
					this._Scale = value;
				}
			}
		}
		
		[Column(Storage="_Condition", DbType="Int NOT NULL")]
		public int Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this._Condition = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.ContactMethodHandlerTable")]
	public partial class ContactMethodHandlerTable
	{
		
		private long _ID;
		
		private long _ContactMethod;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public ContactMethodHandlerTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_ContactMethod", DbType="BigInt NOT NULL")]
		public long ContactMethod
		{
			get
			{
				return this._ContactMethod;
			}
			set
			{
				if ((this._ContactMethod != value))
				{
					this._ContactMethod = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.DateMetricEvaluatorTable")]
	public partial class DateMetricEvaluatorTable
	{
		
		private long _ID;
		
		private System.DateTime _LastAcceptanceDate;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public DateMetricEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_LastAcceptanceDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastAcceptanceDate
		{
			get
			{
				return this._LastAcceptanceDate;
			}
			set
			{
				if ((this._LastAcceptanceDate != value))
				{
					this._LastAcceptanceDate = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.DistanceMetricEvaluatorTable")]
	public partial class DistanceMetricEvaluatorTable
	{
		
		private long _ID;
		
		private int _Scale;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public DistanceMetricEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Scale", DbType="Int NOT NULL")]
		public int Scale
		{
			get
			{
				return this._Scale;
			}
			set
			{
				if ((this._Scale != value))
				{
					this._Scale = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.EpaMarketClassFilterEvaluatorTable")]
	public partial class EpaMarketClassFilterEvaluatorTable
	{
		
		private long _ID;
		
		private long _MarketClass;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public EpaMarketClassFilterEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_MarketClass", DbType="BigInt NOT NULL")]
		public long MarketClass
		{
			get
			{
				return this._MarketClass;
			}
			set
			{
				if ((this._MarketClass != value))
				{
					this._MarketClass = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.EvaluatorTable")]
	public partial class EvaluatorTable
	{
		
		private long _ID;
		
		private System.Nullable<long> _VFX_CreatorID;
		
		private System.Nullable<long> _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private string _Active;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private string _RequestType;
		
		private string _Hidden;
		
		public EvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt")]
		public System.Nullable<long> VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this._VFX_CreatorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt")]
		public System.Nullable<long> VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this._VFX_UpdaterID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this._VFX_DeletorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this._VFX_DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this._VFX_DateUpdated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this._VFX_DateDeleted = value;
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
		
		[Column(Storage="_RequestType", DbType="NVarChar(400)")]
		public string RequestType
		{
			get
			{
				return this._RequestType;
			}
			set
			{
				if ((this._RequestType != value))
				{
					this._RequestType = value;
				}
			}
		}
		
		[Column(Storage="_Hidden", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this._Hidden = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.ExtendedBodyStyleFilterEvaluatorTable")]
	public partial class ExtendedBodyStyleFilterEvaluatorTable
	{
		
		private long _ID;
		
		private long _ExtendedBodyStyle;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public ExtendedBodyStyleFilterEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_ExtendedBodyStyle", DbType="BigInt NOT NULL")]
		public long ExtendedBodyStyle
		{
			get
			{
				return this._ExtendedBodyStyle;
			}
			set
			{
				if ((this._ExtendedBodyStyle != value))
				{
					this._ExtendedBodyStyle = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.FilterEvaluatorTable")]
	public partial class FilterEvaluatorTable
	{
		
		private long _ID;
		
		private System.Nullable<int> _Behavior;
		
		private string _RequestType;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public FilterEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Behavior", DbType="Int")]
		public System.Nullable<int> Behavior
		{
			get
			{
				return this._Behavior;
			}
			set
			{
				if ((this._Behavior != value))
				{
					this._Behavior = value;
				}
			}
		}
		
		[Column(Storage="_RequestType", DbType="NVarChar(400)")]
		public string RequestType
		{
			get
			{
				return this._RequestType;
			}
			set
			{
				if ((this._RequestType != value))
				{
					this._RequestType = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.HandlerEvaluatorTable")]
	public partial class HandlerEvaluatorTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _VFX_CreatorID;
		
		private System.Nullable<long> _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private long _Handler;
		
		private long _Evaluator;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(System.Nullable<long> value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(System.Nullable<long> value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnHandlerChanging(long value);
    partial void OnHandlerChanged();
    partial void OnEvaluatorChanging(long value);
    partial void OnEvaluatorChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public HandlerEvaluatorTable()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt")]
		public System.Nullable<long> VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt")]
		public System.Nullable<long> VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_Handler", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Handler
		{
			get
			{
				return this._Handler;
			}
			set
			{
				if ((this._Handler != value))
				{
					this.OnHandlerChanging(value);
					this.SendPropertyChanging();
					this._Handler = value;
					this.SendPropertyChanged("Handler");
					this.OnHandlerChanged();
				}
			}
		}
		
		[Column(Storage="_Evaluator", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Evaluator
		{
			get
			{
				return this._Evaluator;
			}
			set
			{
				if ((this._Evaluator != value))
				{
					this.OnEvaluatorChanging(value);
					this.SendPropertyChanging();
					this._Evaluator = value;
					this.SendPropertyChanged("Evaluator");
					this.OnEvaluatorChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="Rfi.HandlerTable")]
	public partial class HandlerTable
	{
		
		private long _ID;
		
		private System.Nullable<long> _VFX_CreatorID;
		
		private System.Nullable<long> _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private string _Active;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private string _Comments;
		
		public HandlerTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt")]
		public System.Nullable<long> VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this._VFX_CreatorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt")]
		public System.Nullable<long> VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this._VFX_UpdaterID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this._VFX_DeletorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this._VFX_DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this._VFX_DateUpdated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this._VFX_DateDeleted = value;
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Char(5)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
		
		[Column(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this._Comments = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.HandlerTemplateEvaluatorTable")]
	public partial class HandlerTemplateEvaluatorTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private long _HandlerTemplate;
		
		private long _Evaluator;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnHandlerTemplateChanging(long value);
    partial void OnHandlerTemplateChanged();
    partial void OnEvaluatorChanging(long value);
    partial void OnEvaluatorChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public HandlerTemplateEvaluatorTable()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_HandlerTemplate", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HandlerTemplate
		{
			get
			{
				return this._HandlerTemplate;
			}
			set
			{
				if ((this._HandlerTemplate != value))
				{
					this.OnHandlerTemplateChanging(value);
					this.SendPropertyChanging();
					this._HandlerTemplate = value;
					this.SendPropertyChanged("HandlerTemplate");
					this.OnHandlerTemplateChanged();
				}
			}
		}
		
		[Column(Storage="_Evaluator", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Evaluator
		{
			get
			{
				return this._Evaluator;
			}
			set
			{
				if ((this._Evaluator != value))
				{
					this.OnEvaluatorChanging(value);
					this.SendPropertyChanging();
					this._Evaluator = value;
					this.SendPropertyChanged("Evaluator");
					this.OnEvaluatorChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="Rfi.HandlerTemplateTable")]
	public partial class HandlerTemplateTable
	{
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private string _HandlerType;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public HandlerTemplateTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this._VFX_CreatorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this._VFX_UpdaterID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this._VFX_DeletorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this._VFX_DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this._VFX_DateUpdated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this._VFX_DateDeleted = value;
				}
			}
		}
		
		[Column(Storage="_HandlerType", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string HandlerType
		{
			get
			{
				return this._HandlerType;
			}
			set
			{
				if ((this._HandlerType != value))
				{
					this._HandlerType = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.HttpSourceTable")]
	public partial class HttpSourceTable
	{
		
		private long _ID;
		
		private string _Host;
		
		private string _Path;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public HttpSourceTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Host", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this._Host = value;
				}
			}
		}
		
		[Column(Storage="_Path", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this._Path = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.InventoryVehicleRequestTable")]
	public partial class InventoryVehicleRequestTable
	{
		
		private long _ID;
		
		private string _IncludeMultipleSellers;
		
		private long _Vehicle;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public InventoryVehicleRequestTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_IncludeMultipleSellers", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string IncludeMultipleSellers
		{
			get
			{
				return this._IncludeMultipleSellers;
			}
			set
			{
				if ((this._IncludeMultipleSellers != value))
				{
					this._IncludeMultipleSellers = value;
				}
			}
		}
		
		[Column(Storage="_Vehicle", DbType="BigInt NOT NULL")]
		public long Vehicle
		{
			get
			{
				return this._Vehicle;
			}
			set
			{
				if ((this._Vehicle != value))
				{
					this._Vehicle = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.JumpStartAutomotiveHandlerTable")]
	public partial class JumpStartAutomotiveHandlerTable
	{
		
		private long _ID;
		
		private long _Party;
		
		private string _Provider;
		
		private string _RequirePing;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public JumpStartAutomotiveHandlerTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Party", DbType="BigInt NOT NULL")]
		public long Party
		{
			get
			{
				return this._Party;
			}
			set
			{
				if ((this._Party != value))
				{
					this._Party = value;
				}
			}
		}
		
		[Column(Storage="_Provider", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					this._Provider = value;
				}
			}
		}
		
		[Column(Storage="_RequirePing", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string RequirePing
		{
			get
			{
				return this._RequirePing;
			}
			set
			{
				if ((this._RequirePing != value))
				{
					this._RequirePing = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.LocaleHandlerConditionMakeDistributionTable")]
	public partial class LocaleHandlerConditionMakeDistributionTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private long _LocaleHandler;
		
		private int _Condition;
		
		private long _Make;
		
		private int _RequestVolume;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnLocaleHandlerChanging(long value);
    partial void OnLocaleHandlerChanged();
    partial void OnConditionChanging(int value);
    partial void OnConditionChanged();
    partial void OnMakeChanging(long value);
    partial void OnMakeChanged();
    partial void OnRequestVolumeChanging(int value);
    partial void OnRequestVolumeChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public LocaleHandlerConditionMakeDistributionTable()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_LocaleHandler", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long LocaleHandler
		{
			get
			{
				return this._LocaleHandler;
			}
			set
			{
				if ((this._LocaleHandler != value))
				{
					this.OnLocaleHandlerChanging(value);
					this.SendPropertyChanging();
					this._LocaleHandler = value;
					this.SendPropertyChanged("LocaleHandler");
					this.OnLocaleHandlerChanged();
				}
			}
		}
		
		[Column(Storage="_Condition", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[Column(Storage="_Make", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[Column(Storage="_RequestVolume", DbType="Int NOT NULL")]
		public int RequestVolume
		{
			get
			{
				return this._RequestVolume;
			}
			set
			{
				if ((this._RequestVolume != value))
				{
					this.OnRequestVolumeChanging(value);
					this.SendPropertyChanging();
					this._RequestVolume = value;
					this.SendPropertyChanged("RequestVolume");
					this.OnRequestVolumeChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="Rfi.LocaleHandlerPriorityOptionsTable")]
	public partial class LocaleHandlerPriorityOptionsTable
	{
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private long _LocaleHandler;
		
		private long _SellerPriorityLevel;
		
		private string _AllowIncludeMultipleSellerNewInventorySpecific;
		
		private string _OptInIncludeMultipleSellerNewInventorySpecific;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public LocaleHandlerPriorityOptionsTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this._VFX_CreatorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this._VFX_UpdaterID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this._VFX_DeletorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this._VFX_DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this._VFX_DateUpdated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this._VFX_DateDeleted = value;
				}
			}
		}
		
		[Column(Storage="_LocaleHandler", DbType="BigInt NOT NULL")]
		public long LocaleHandler
		{
			get
			{
				return this._LocaleHandler;
			}
			set
			{
				if ((this._LocaleHandler != value))
				{
					this._LocaleHandler = value;
				}
			}
		}
		
		[Column(Storage="_SellerPriorityLevel", DbType="BigInt NOT NULL")]
		public long SellerPriorityLevel
		{
			get
			{
				return this._SellerPriorityLevel;
			}
			set
			{
				if ((this._SellerPriorityLevel != value))
				{
					this._SellerPriorityLevel = value;
				}
			}
		}
		
		[Column(Storage="_AllowIncludeMultipleSellerNewInventorySpecific", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string AllowIncludeMultipleSellerNewInventorySpecific
		{
			get
			{
				return this._AllowIncludeMultipleSellerNewInventorySpecific;
			}
			set
			{
				if ((this._AllowIncludeMultipleSellerNewInventorySpecific != value))
				{
					this._AllowIncludeMultipleSellerNewInventorySpecific = value;
				}
			}
		}
		
		[Column(Storage="_OptInIncludeMultipleSellerNewInventorySpecific", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string OptInIncludeMultipleSellerNewInventorySpecific
		{
			get
			{
				return this._OptInIncludeMultipleSellerNewInventorySpecific;
			}
			set
			{
				if ((this._OptInIncludeMultipleSellerNewInventorySpecific != value))
				{
					this._OptInIncludeMultipleSellerNewInventorySpecific = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.LocaleHandlerTable")]
	public partial class LocaleHandlerTable
	{
		
		private long _ID;
		
		private long _Locale;
		
		private double _NewSearchRadiusInMiles;
		
		private double _UsedSearchRadiusInMiles;
		
		private byte _SellerDistanceWeight;
		
		private byte _SellerHistoryWeight;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private byte _SellerPreferenceWeight;
		
		private byte _SellerQuotaWeight;
		
		private int _DefaultRequestDistributionVolume;
		
		public LocaleHandlerTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Locale", DbType="BigInt NOT NULL")]
		public long Locale
		{
			get
			{
				return this._Locale;
			}
			set
			{
				if ((this._Locale != value))
				{
					this._Locale = value;
				}
			}
		}
		
		[Column(Storage="_NewSearchRadiusInMiles", DbType="Float NOT NULL")]
		public double NewSearchRadiusInMiles
		{
			get
			{
				return this._NewSearchRadiusInMiles;
			}
			set
			{
				if ((this._NewSearchRadiusInMiles != value))
				{
					this._NewSearchRadiusInMiles = value;
				}
			}
		}
		
		[Column(Storage="_UsedSearchRadiusInMiles", DbType="Float NOT NULL")]
		public double UsedSearchRadiusInMiles
		{
			get
			{
				return this._UsedSearchRadiusInMiles;
			}
			set
			{
				if ((this._UsedSearchRadiusInMiles != value))
				{
					this._UsedSearchRadiusInMiles = value;
				}
			}
		}
		
		[Column(Storage="_SellerDistanceWeight", DbType="TinyInt NOT NULL")]
		public byte SellerDistanceWeight
		{
			get
			{
				return this._SellerDistanceWeight;
			}
			set
			{
				if ((this._SellerDistanceWeight != value))
				{
					this._SellerDistanceWeight = value;
				}
			}
		}
		
		[Column(Storage="_SellerHistoryWeight", DbType="TinyInt NOT NULL")]
		public byte SellerHistoryWeight
		{
			get
			{
				return this._SellerHistoryWeight;
			}
			set
			{
				if ((this._SellerHistoryWeight != value))
				{
					this._SellerHistoryWeight = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
		
		[Column(Storage="_SellerPreferenceWeight", DbType="TinyInt NOT NULL")]
		public byte SellerPreferenceWeight
		{
			get
			{
				return this._SellerPreferenceWeight;
			}
			set
			{
				if ((this._SellerPreferenceWeight != value))
				{
					this._SellerPreferenceWeight = value;
				}
			}
		}
		
		[Column(Storage="_SellerQuotaWeight", DbType="TinyInt NOT NULL")]
		public byte SellerQuotaWeight
		{
			get
			{
				return this._SellerQuotaWeight;
			}
			set
			{
				if ((this._SellerQuotaWeight != value))
				{
					this._SellerQuotaWeight = value;
				}
			}
		}
		
		[Column(Storage="_DefaultRequestDistributionVolume", DbType="Int NOT NULL")]
		public int DefaultRequestDistributionVolume
		{
			get
			{
				return this._DefaultRequestDistributionVolume;
			}
			set
			{
				if ((this._DefaultRequestDistributionVolume != value))
				{
					this._DefaultRequestDistributionVolume = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.MakeFilterEvaluatorTable")]
	public partial class MakeFilterEvaluatorTable
	{
		
		private long _ID;
		
		private long _Make;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public MakeFilterEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Make", DbType="BigInt NOT NULL")]
		public long Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this._Make = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.MetricEvaluatorTable")]
	public partial class MetricEvaluatorTable
	{
		
		private long _ID;
		
		private string _Dummy;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public MetricEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Name="[Dummy]", Storage="_Dummy", DbType="Char(5)")]
		public string Dummy
		{
			get
			{
				return this._Dummy;
			}
			set
			{
				if ((this._Dummy != value))
				{
					this._Dummy = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.PartyContactMethodHandlerTable")]
	public partial class PartyContactMethodHandlerTable
	{
		
		private long _ID;
		
		private long _Party;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public PartyContactMethodHandlerTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Party", DbType="BigInt NOT NULL")]
		public long Party
		{
			get
			{
				return this._Party;
			}
			set
			{
				if ((this._Party != value))
				{
					this._Party = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.PartyHandlerCategoryTable")]
	public partial class PartyHandlerCategoryTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private string _Name;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public PartyHandlerCategoryTable()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="Rfi.PartyHandlerTable")]
	public partial class PartyHandlerTable
	{
		
		private long _ID;
		
		private long _Party;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private long _Category;
		
		public PartyHandlerTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Party", DbType="BigInt NOT NULL")]
		public long Party
		{
			get
			{
				return this._Party;
			}
			set
			{
				if ((this._Party != value))
				{
					this._Party = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
		
		[Column(Storage="_Category", DbType="BigInt NOT NULL")]
		public long Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.PreferenceMetricEvaluatorTable")]
	public partial class PreferenceMetricEvaluatorTable
	{
		
		private long _ID;
		
		private int _Preference;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public PreferenceMetricEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Preference", DbType="Int NOT NULL")]
		public int Preference
		{
			get
			{
				return this._Preference;
			}
			set
			{
				if ((this._Preference != value))
				{
					this._Preference = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.QuotaMetricEvaluatorTable")]
	public partial class QuotaMetricEvaluatorTable
	{
		
		private long _ID;
		
		private string _Period;
		
		private System.DateTime _PeriodBeginDate;
		
		private int _Threshold;
		
		private int _Count;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public QuotaMetricEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Period", DbType="VarChar(27) NOT NULL", CanBeNull=false)]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this._Period = value;
				}
			}
		}
		
		[Column(Storage="_PeriodBeginDate", DbType="DateTime NOT NULL")]
		public System.DateTime PeriodBeginDate
		{
			get
			{
				return this._PeriodBeginDate;
			}
			set
			{
				if ((this._PeriodBeginDate != value))
				{
					this._PeriodBeginDate = value;
				}
			}
		}
		
		[Column(Storage="_Threshold", DbType="Int NOT NULL")]
		public int Threshold
		{
			get
			{
				return this._Threshold;
			}
			set
			{
				if ((this._Threshold != value))
				{
					this._Threshold = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.RegexFilterEvaluatorTable")]
	public partial class RegexFilterEvaluatorTable
	{
		
		private long _ID;
		
		private string _Label;
		
		private string _Bindings;
		
		private string _Patterns;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public RegexFilterEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Label", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this._Label = value;
				}
			}
		}
		
		[Column(Storage="_Bindings", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Bindings
		{
			get
			{
				return this._Bindings;
			}
			set
			{
				if ((this._Bindings != value))
				{
					this._Bindings = value;
				}
			}
		}
		
		[Column(Storage="_Patterns", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Patterns
		{
			get
			{
				return this._Patterns;
			}
			set
			{
				if ((this._Patterns != value))
				{
					this._Patterns = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.RequestHandlerTable")]
	public partial class RequestHandlerTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private int _Status;
		
		private string _Reason;
		
		private System.Nullable<System.DateTime> _DateHandled;
		
		private string _Primary;
		
		private int _Sequence;
		
		private long _Request;
		
		private long _Handler;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnDateHandledChanging(System.Nullable<System.DateTime> value);
    partial void OnDateHandledChanged();
    partial void OnPrimaryChanging(string value);
    partial void OnPrimaryChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    partial void OnRequestChanging(long value);
    partial void OnRequestChanged();
    partial void OnHandlerChanging(long value);
    partial void OnHandlerChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public RequestHandlerTable()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Reason", DbType="NVarChar(1024)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[Column(Storage="_DateHandled", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateHandled
		{
			get
			{
				return this._DateHandled;
			}
			set
			{
				if ((this._DateHandled != value))
				{
					this.OnDateHandledChanging(value);
					this.SendPropertyChanging();
					this._DateHandled = value;
					this.SendPropertyChanged("DateHandled");
					this.OnDateHandledChanged();
				}
			}
		}
		
		[Column(Name="[Primary]", Storage="_Primary", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string Primary
		{
			get
			{
				return this._Primary;
			}
			set
			{
				if ((this._Primary != value))
				{
					this.OnPrimaryChanging(value);
					this.SendPropertyChanging();
					this._Primary = value;
					this.SendPropertyChanged("Primary");
					this.OnPrimaryChanged();
				}
			}
		}
		
		[Column(Storage="_Sequence", DbType="Int NOT NULL")]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[Column(Storage="_Request", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Request
		{
			get
			{
				return this._Request;
			}
			set
			{
				if ((this._Request != value))
				{
					this.OnRequestChanging(value);
					this.SendPropertyChanging();
					this._Request = value;
					this.SendPropertyChanged("Request");
					this.OnRequestChanged();
				}
			}
		}
		
		[Column(Storage="_Handler", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Handler
		{
			get
			{
				return this._Handler;
			}
			set
			{
				if ((this._Handler != value))
				{
					this.OnHandlerChanging(value);
					this.SendPropertyChanging();
					this._Handler = value;
					this.SendPropertyChanged("Handler");
					this.OnHandlerChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="Rfi.RequestHashHistoryTable")]
	public partial class RequestHashHistoryTable
	{
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private string _Hash;
		
		private System.DateTime _Date;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public RequestHashHistoryTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this._VFX_CreatorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this._VFX_UpdaterID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this._VFX_DeletorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this._VFX_DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this._VFX_DateUpdated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this._VFX_DateDeleted = value;
				}
			}
		}
		
		[Column(Storage="_Hash", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
		public string Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this._Hash = value;
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.RequestSourceTable")]
	public partial class RequestSourceTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private long _Request;
		
		private long _Source;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnRequestChanging(long value);
    partial void OnRequestChanged();
    partial void OnSourceChanging(long value);
    partial void OnSourceChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public RequestSourceTable()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_Request", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Request
		{
			get
			{
				return this._Request;
			}
			set
			{
				if ((this._Request != value))
				{
					this.OnRequestChanging(value);
					this.SendPropertyChanging();
					this._Request = value;
					this.SendPropertyChanged("Request");
					this.OnRequestChanged();
				}
			}
		}
		
		[Column(Storage="_Source", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="Rfi.RequestTable")]
	public partial class RequestTable
	{
		
		private long _ID;
		
		private System.Nullable<long> _VFX_CreatorID;
		
		private System.Nullable<long> _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private string _Test;
		
		private long _Agent;
		
		private long _ContactInfo;
		
		private System.Nullable<long> _Category;
		
		private long _Source;
		
		private string _Comment;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private int _Status;
		
		private string _Reason;
		
		private string _Uri;
		
		private string _AgentIP;
		
		private string _AgentKey;
		
		public RequestTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt")]
		public System.Nullable<long> VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this._VFX_CreatorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt")]
		public System.Nullable<long> VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this._VFX_UpdaterID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this._VFX_DeletorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this._VFX_DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this._VFX_DateUpdated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this._VFX_DateDeleted = value;
				}
			}
		}
		
		[Column(Storage="_Test", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string Test
		{
			get
			{
				return this._Test;
			}
			set
			{
				if ((this._Test != value))
				{
					this._Test = value;
				}
			}
		}
		
		[Column(Storage="_Agent", DbType="BigInt NOT NULL")]
		public long Agent
		{
			get
			{
				return this._Agent;
			}
			set
			{
				if ((this._Agent != value))
				{
					this._Agent = value;
				}
			}
		}
		
		[Column(Storage="_ContactInfo", DbType="BigInt NOT NULL")]
		public long ContactInfo
		{
			get
			{
				return this._ContactInfo;
			}
			set
			{
				if ((this._ContactInfo != value))
				{
					this._ContactInfo = value;
				}
			}
		}
		
		[Column(Storage="_Category", DbType="BigInt")]
		public System.Nullable<long> Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="BigInt NOT NULL")]
		public long Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NVarChar(512)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Storage="_Reason", DbType="VarChar(1024)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this._Reason = value;
				}
			}
		}
		
		[Column(Storage="_Uri", DbType="VarChar(128)")]
		public string Uri
		{
			get
			{
				return this._Uri;
			}
			set
			{
				if ((this._Uri != value))
				{
					this._Uri = value;
				}
			}
		}
		
		[Column(Storage="_AgentIP", DbType="NVarChar(15)")]
		public string AgentIP
		{
			get
			{
				return this._AgentIP;
			}
			set
			{
				if ((this._AgentIP != value))
				{
					this._AgentIP = value;
				}
			}
		}
		
		[Column(Storage="_AgentKey", DbType="NVarChar(128)")]
		public string AgentKey
		{
			get
			{
				return this._AgentKey;
			}
			set
			{
				if ((this._AgentKey != value))
				{
					this._AgentKey = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.RequestTypeCategoryTable")]
	public partial class RequestTypeCategoryTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _VFX_CreatorID;
		
		private System.Nullable<long> _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private string _RequestType;
		
		private string _Name;
		
		private string _Description;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(System.Nullable<long> value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(System.Nullable<long> value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnRequestTypeChanging(string value);
    partial void OnRequestTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public RequestTypeCategoryTable()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt")]
		public System.Nullable<long> VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt")]
		public System.Nullable<long> VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_RequestType", DbType="NVarChar(400) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RequestType
		{
			get
			{
				return this._RequestType;
			}
			set
			{
				if ((this._RequestType != value))
				{
					this.OnRequestTypeChanging(value);
					this.SendPropertyChanging();
					this._RequestType = value;
					this.SendPropertyChanged("RequestType");
					this.OnRequestTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(512)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="Rfi.ResearchVehicleModelRequestTable")]
	public partial class ResearchVehicleModelRequestTable
	{
		
		private long _ID;
		
		private long _Model;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public ResearchVehicleModelRequestTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Model", DbType="BigInt NOT NULL")]
		public long Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.ResearchVehiclePreviewRequestTable")]
	public partial class ResearchVehiclePreviewRequestTable
	{
		
		private long _ID;
		
		private long _Make;
		
		private string _Model;
		
		private short _Year;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public ResearchVehiclePreviewRequestTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Make", DbType="BigInt NOT NULL")]
		public long Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this._Make = value;
				}
			}
		}
		
		[Column(Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.ResearchVehicleRequestTable")]
	public partial class ResearchVehicleRequestTable
	{
		
		private long _ID;
		
		private int _Condition;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private System.Nullable<long> _SellerInfo;
		
		public ResearchVehicleRequestTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Condition", DbType="Int NOT NULL")]
		public int Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this._Condition = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
		
		[Column(Storage="_SellerInfo", DbType="BigInt")]
		public System.Nullable<long> SellerInfo
		{
			get
			{
				return this._SellerInfo;
			}
			set
			{
				if ((this._SellerInfo != value))
				{
					this._SellerInfo = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.ResearchVehicleTrimRequestTable")]
	public partial class ResearchVehicleTrimRequestTable
	{
		
		private long _ID;
		
		private long _Trim;
		
		private System.Nullable<long> _ColorCombination;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private System.Xml.Linq.XElement _Options;
		
		public ResearchVehicleTrimRequestTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Trim", DbType="BigInt NOT NULL")]
		public long Trim
		{
			get
			{
				return this._Trim;
			}
			set
			{
				if ((this._Trim != value))
				{
					this._Trim = value;
				}
			}
		}
		
		[Column(Storage="_ColorCombination", DbType="BigInt")]
		public System.Nullable<long> ColorCombination
		{
			get
			{
				return this._ColorCombination;
			}
			set
			{
				if ((this._ColorCombination != value))
				{
					this._ColorCombination = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
		
		[Column(Storage="_Options", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Options
		{
			get
			{
				return this._Options;
			}
			set
			{
				if ((this._Options != value))
				{
					this._Options = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.SellerInfoContactMethodHandlerTable")]
	public partial class SellerInfoContactMethodHandlerTable
	{
		
		private long _ID;
		
		private long _SellerInfo;
		
		private string _Code;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public SellerInfoContactMethodHandlerTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_SellerInfo", DbType="BigInt NOT NULL")]
		public long SellerInfo
		{
			get
			{
				return this._SellerInfo;
			}
			set
			{
				if ((this._SellerInfo != value))
				{
					this._SellerInfo = value;
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(64)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.SellerInfoHandlerConditionMakeTable")]
	public partial class SellerInfoHandlerConditionMakeTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private long _SellerInfoHandler;
		
		private int _Condition;
		
		private long _Make;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnSellerInfoHandlerChanging(long value);
    partial void OnSellerInfoHandlerChanged();
    partial void OnConditionChanging(int value);
    partial void OnConditionChanged();
    partial void OnMakeChanging(long value);
    partial void OnMakeChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public SellerInfoHandlerConditionMakeTable()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_SellerInfoHandler", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long SellerInfoHandler
		{
			get
			{
				return this._SellerInfoHandler;
			}
			set
			{
				if ((this._SellerInfoHandler != value))
				{
					this.OnSellerInfoHandlerChanging(value);
					this.SendPropertyChanging();
					this._SellerInfoHandler = value;
					this.SendPropertyChanged("SellerInfoHandler");
					this.OnSellerInfoHandlerChanged();
				}
			}
		}
		
		[Column(Storage="_Condition", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[Column(Storage="_Make", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="Rfi.SellerInfoHandlerTable")]
	public partial class SellerInfoHandlerTable
	{
		
		private long _ID;
		
		private long _SellerInfo;
		
		private string _RequirePrimaryPhone;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public SellerInfoHandlerTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_SellerInfo", DbType="BigInt NOT NULL")]
		public long SellerInfo
		{
			get
			{
				return this._SellerInfo;
			}
			set
			{
				if ((this._SellerInfo != value))
				{
					this._SellerInfo = value;
				}
			}
		}
		
		[Column(Storage="_RequirePrimaryPhone", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string RequirePrimaryPhone
		{
			get
			{
				return this._RequirePrimaryPhone;
			}
			set
			{
				if ((this._RequirePrimaryPhone != value))
				{
					this._RequirePrimaryPhone = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.SourceFilterEvaluatorTable")]
	public partial class SourceFilterEvaluatorTable
	{
		
		private long _ID;
		
		private long _Source;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public SourceFilterEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="BigInt NOT NULL")]
		public long Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.SourceTable")]
	public partial class SourceTable
	{
		
		private long _ID;
		
		private System.Nullable<long> _VFX_CreatorID;
		
		private System.Nullable<long> _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private System.Nullable<long> _Category;
		
		private string _Name;
		
		private string _Description;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public SourceTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt")]
		public System.Nullable<long> VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this._VFX_CreatorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt")]
		public System.Nullable<long> VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this._VFX_UpdaterID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this._VFX_DeletorID = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this._VFX_DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this._VFX_DateUpdated = value;
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this._VFX_DateDeleted = value;
				}
			}
		}
		
		[Column(Storage="_Category", DbType="BigInt")]
		public System.Nullable<long> Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(1024)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.SourceTypeCategoryTable")]
	public partial class SourceTypeCategoryTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _VFX_CreatorID;
		
		private System.Nullable<long> _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private string _SourceType;
		
		private string _Name;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(System.Nullable<long> value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(System.Nullable<long> value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnSourceTypeChanging(string value);
    partial void OnSourceTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public SourceTypeCategoryTable()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt")]
		public System.Nullable<long> VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt")]
		public System.Nullable<long> VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_SourceType", DbType="NVarChar(400) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SourceType
		{
			get
			{
				return this._SourceType;
			}
			set
			{
				if ((this._SourceType != value))
				{
					this.OnSourceTypeChanging(value);
					this.SendPropertyChanging();
					this._SourceType = value;
					this.SendPropertyChanged("SourceType");
					this.OnSourceTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="Rfi.TollFreeRequestTable")]
	public partial class TollFreeRequestTable
	{
		
		private long _ID;
		
		private long _SellerInfo;
		
		private string _Duration;
		
		private System.Nullable<System.DateTime> _ConnectDate;
		
		private System.Nullable<System.DateTime> _DisconnectDate;
		
		private string _DisconnectReason;
		
		private string _RecordingUri;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private string _ProviderKey;
		
		public TollFreeRequestTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_SellerInfo", DbType="BigInt NOT NULL")]
		public long SellerInfo
		{
			get
			{
				return this._SellerInfo;
			}
			set
			{
				if ((this._SellerInfo != value))
				{
					this._SellerInfo = value;
				}
			}
		}
		
		[Column(Storage="_Duration", DbType="VarChar(27)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[Column(Storage="_ConnectDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConnectDate
		{
			get
			{
				return this._ConnectDate;
			}
			set
			{
				if ((this._ConnectDate != value))
				{
					this._ConnectDate = value;
				}
			}
		}
		
		[Column(Storage="_DisconnectDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DisconnectDate
		{
			get
			{
				return this._DisconnectDate;
			}
			set
			{
				if ((this._DisconnectDate != value))
				{
					this._DisconnectDate = value;
				}
			}
		}
		
		[Column(Storage="_DisconnectReason", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string DisconnectReason
		{
			get
			{
				return this._DisconnectReason;
			}
			set
			{
				if ((this._DisconnectReason != value))
				{
					this._DisconnectReason = value;
				}
			}
		}
		
		[Column(Storage="_RecordingUri", DbType="NVarChar(1024)")]
		public string RecordingUri
		{
			get
			{
				return this._RecordingUri;
			}
			set
			{
				if ((this._RecordingUri != value))
				{
					this._RecordingUri = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
		
		[Column(Storage="_ProviderKey", DbType="VarChar(36) NOT NULL", CanBeNull=false)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this._ProviderKey = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.ValidationFilterEvaluatorTable")]
	public partial class ValidationFilterEvaluatorTable
	{
		
		private long _ID;
		
		private string _ValidatorType;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public ValidationFilterEvaluatorTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_ValidatorType", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string ValidatorType
		{
			get
			{
				return this._ValidatorType;
			}
			set
			{
				if ((this._ValidatorType != value))
				{
					this._ValidatorType = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
	
	[Table(Name="Rfi.VehicleRequestTable")]
	public partial class VehicleRequestTable
	{
		
		private long _ID;
		
		private string _Timeframe;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		public VehicleRequestTable()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Timeframe", DbType="VarChar(27)")]
		public string Timeframe
		{
			get
			{
				return this._Timeframe;
			}
			set
			{
				if ((this._Timeframe != value))
				{
					this._Timeframe = value;
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this._ETL_NaturalKey = value;
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this._ETL_Hash = value;
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this._ETL_JobCategory = value;
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this._ETL_DateEffective = value;
				}
			}
		}
	}
}
#pragma warning restore 1591

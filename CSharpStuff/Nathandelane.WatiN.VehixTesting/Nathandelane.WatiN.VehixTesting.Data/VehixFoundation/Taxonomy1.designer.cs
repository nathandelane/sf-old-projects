#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nathandelane.WatiN.VehixTesting.Data.VehixFoundation
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="VehixFoundation")]
	public partial class VehixFoundationTaxonomyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTaxonomicRankingRelationshipTable(TaxonomicRankingRelationshipTable instance);
    partial void UpdateTaxonomicRankingRelationshipTable(TaxonomicRankingRelationshipTable instance);
    partial void DeleteTaxonomicRankingRelationshipTable(TaxonomicRankingRelationshipTable instance);
    partial void InsertTaxonTable(TaxonTable instance);
    partial void UpdateTaxonTable(TaxonTable instance);
    partial void DeleteTaxonTable(TaxonTable instance);
    partial void InsertTaxonomicRankingTable(TaxonomicRankingTable instance);
    partial void UpdateTaxonomicRankingTable(TaxonomicRankingTable instance);
    partial void DeleteTaxonomicRankingTable(TaxonomicRankingTable instance);
    partial void InsertTaxonomicRankTable(TaxonomicRankTable instance);
    partial void UpdateTaxonomicRankTable(TaxonomicRankTable instance);
    partial void DeleteTaxonomicRankTable(TaxonomicRankTable instance);
    partial void InsertTaxonomyTable(TaxonomyTable instance);
    partial void UpdateTaxonomyTable(TaxonomyTable instance);
    partial void DeleteTaxonomyTable(TaxonomyTable instance);
    partial void InsertTaxonRelationshipTable(TaxonRelationshipTable instance);
    partial void UpdateTaxonRelationshipTable(TaxonRelationshipTable instance);
    partial void DeleteTaxonRelationshipTable(TaxonRelationshipTable instance);
    #endregion
		
		public VehixFoundationTaxonomyDataContext() : 
				base(global::Nathandelane.WatiN.VehixTesting.Data.Properties.Settings.Default.VehixFoundationConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VehixFoundationTaxonomyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehixFoundationTaxonomyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehixFoundationTaxonomyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehixFoundationTaxonomyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TaxonomicRankingRelationshipTable> TaxonomicRankingRelationshipTables
		{
			get
			{
				return this.GetTable<TaxonomicRankingRelationshipTable>();
			}
		}
		
		public System.Data.Linq.Table<TaxonTable> TaxonTables
		{
			get
			{
				return this.GetTable<TaxonTable>();
			}
		}
		
		public System.Data.Linq.Table<TaxonomicRankingTable> TaxonomicRankingTables
		{
			get
			{
				return this.GetTable<TaxonomicRankingTable>();
			}
		}
		
		public System.Data.Linq.Table<TaxonomicRankTable> TaxonomicRankTables
		{
			get
			{
				return this.GetTable<TaxonomicRankTable>();
			}
		}
		
		public System.Data.Linq.Table<TaxonomyTable> TaxonomyTables
		{
			get
			{
				return this.GetTable<TaxonomyTable>();
			}
		}
		
		public System.Data.Linq.Table<TaxonRelationshipTable> TaxonRelationshipTables
		{
			get
			{
				return this.GetTable<TaxonRelationshipTable>();
			}
		}
	}
	
	[Table(Name="Taxonomy.TaxonomicRankingRelationshipTable")]
	public partial class TaxonomicRankingRelationshipTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private long _Target;
		
		private long _TaxonomicRanking;
		
		private float _Relevance;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private EntityRef<TaxonomicRankingTable> _TaxonomicRankingTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnTargetChanging(long value);
    partial void OnTargetChanged();
    partial void OnTaxonomicRankingChanging(long value);
    partial void OnTaxonomicRankingChanged();
    partial void OnRelevanceChanging(float value);
    partial void OnRelevanceChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public TaxonomicRankingRelationshipTable()
		{
			this._TaxonomicRankingTable = default(EntityRef<TaxonomicRankingTable>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_Target", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[Column(Storage="_TaxonomicRanking", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long TaxonomicRanking
		{
			get
			{
				return this._TaxonomicRanking;
			}
			set
			{
				if ((this._TaxonomicRanking != value))
				{
					if (this._TaxonomicRankingTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxonomicRankingChanging(value);
					this.SendPropertyChanging();
					this._TaxonomicRanking = value;
					this.SendPropertyChanged("TaxonomicRanking");
					this.OnTaxonomicRankingChanged();
				}
			}
		}
		
		[Column(Name="[Relevance]", Storage="_Relevance", DbType="Real NOT NULL")]
		public float Relevance
		{
			get
			{
				return this._Relevance;
			}
			set
			{
				if ((this._Relevance != value))
				{
					this.OnRelevanceChanging(value);
					this.SendPropertyChanging();
					this._Relevance = value;
					this.SendPropertyChanged("Relevance");
					this.OnRelevanceChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		[Association(Name="TaxonomicRankingTable_TaxonomicRankingRelationshipTable", Storage="_TaxonomicRankingTable", ThisKey="TaxonomicRanking", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TaxonomicRankingTable TaxonomicRankingTable
		{
			get
			{
				return this._TaxonomicRankingTable.Entity;
			}
			set
			{
				TaxonomicRankingTable previousValue = this._TaxonomicRankingTable.Entity;
				if (((previousValue != value) 
							|| (this._TaxonomicRankingTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaxonomicRankingTable.Entity = null;
						previousValue.TaxonomicRankingRelationshipTables.Remove(this);
					}
					this._TaxonomicRankingTable.Entity = value;
					if ((value != null))
					{
						value.TaxonomicRankingRelationshipTables.Add(this);
						this._TaxonomicRanking = value.ID;
					}
					else
					{
						this._TaxonomicRanking = default(long);
					}
					this.SendPropertyChanged("TaxonomicRankingTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="Taxonomy.TaxonTable")]
	public partial class TaxonTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private System.Nullable<long> _Parent;
		
		private string _Name;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private EntitySet<TaxonTable> _TaxonTables;
		
		private EntitySet<TaxonomicRankingTable> _TaxonomicRankingTables;
		
		private EntitySet<TaxonRelationshipTable> _TaxonRelationshipTables;
		
		private EntityRef<TaxonTable> _TaxonTable1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnParentChanging(System.Nullable<long> value);
    partial void OnParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public TaxonTable()
		{
			this._TaxonTables = new EntitySet<TaxonTable>(new Action<TaxonTable>(this.attach_TaxonTables), new Action<TaxonTable>(this.detach_TaxonTables));
			this._TaxonomicRankingTables = new EntitySet<TaxonomicRankingTable>(new Action<TaxonomicRankingTable>(this.attach_TaxonomicRankingTables), new Action<TaxonomicRankingTable>(this.detach_TaxonomicRankingTables));
			this._TaxonRelationshipTables = new EntitySet<TaxonRelationshipTable>(new Action<TaxonRelationshipTable>(this.attach_TaxonRelationshipTables), new Action<TaxonRelationshipTable>(this.detach_TaxonRelationshipTables));
			this._TaxonTable1 = default(EntityRef<TaxonTable>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="BigInt")]
		public System.Nullable<long> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._TaxonTable1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		[Association(Name="TaxonTable_TaxonTable", Storage="_TaxonTables", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<TaxonTable> TaxonTables
		{
			get
			{
				return this._TaxonTables;
			}
			set
			{
				this._TaxonTables.Assign(value);
			}
		}
		
		[Association(Name="TaxonTable_TaxonomicRankingTable", Storage="_TaxonomicRankingTables", ThisKey="ID", OtherKey="Taxon")]
		public EntitySet<TaxonomicRankingTable> TaxonomicRankingTables
		{
			get
			{
				return this._TaxonomicRankingTables;
			}
			set
			{
				this._TaxonomicRankingTables.Assign(value);
			}
		}
		
		[Association(Name="TaxonTable_TaxonRelationshipTable", Storage="_TaxonRelationshipTables", ThisKey="ID", OtherKey="Taxon")]
		public EntitySet<TaxonRelationshipTable> TaxonRelationshipTables
		{
			get
			{
				return this._TaxonRelationshipTables;
			}
			set
			{
				this._TaxonRelationshipTables.Assign(value);
			}
		}
		
		[Association(Name="TaxonTable_TaxonTable", Storage="_TaxonTable1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public TaxonTable TaxonTable1
		{
			get
			{
				return this._TaxonTable1.Entity;
			}
			set
			{
				TaxonTable previousValue = this._TaxonTable1.Entity;
				if (((previousValue != value) 
							|| (this._TaxonTable1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaxonTable1.Entity = null;
						previousValue.TaxonTables.Remove(this);
					}
					this._TaxonTable1.Entity = value;
					if ((value != null))
					{
						value.TaxonTables.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<long>);
					}
					this.SendPropertyChanged("TaxonTable1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaxonTables(TaxonTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonTable1 = this;
		}
		
		private void detach_TaxonTables(TaxonTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonTable1 = null;
		}
		
		private void attach_TaxonomicRankingTables(TaxonomicRankingTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonTable = this;
		}
		
		private void detach_TaxonomicRankingTables(TaxonomicRankingTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonTable = null;
		}
		
		private void attach_TaxonRelationshipTables(TaxonRelationshipTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonTable = this;
		}
		
		private void detach_TaxonRelationshipTables(TaxonRelationshipTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonTable = null;
		}
	}
	
	[Table(Name="Taxonomy.TaxonomicRankingTable")]
	public partial class TaxonomicRankingTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private long _Taxonomy;
		
		private System.Nullable<long> _Parent;
		
		private long _Rank;
		
		private long _Taxon;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private EntitySet<TaxonomicRankingRelationshipTable> _TaxonomicRankingRelationshipTables;
		
		private EntitySet<TaxonomicRankingTable> _TaxonomicRankingTables;
		
		private EntityRef<TaxonTable> _TaxonTable;
		
		private EntityRef<TaxonomicRankingTable> _TaxonomicRankingTable1;
		
		private EntityRef<TaxonomicRankTable> _TaxonomicRankTable;
		
		private EntityRef<TaxonomyTable> _TaxonomyTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnTaxonomyChanging(long value);
    partial void OnTaxonomyChanged();
    partial void OnParentChanging(System.Nullable<long> value);
    partial void OnParentChanged();
    partial void OnRankChanging(long value);
    partial void OnRankChanged();
    partial void OnTaxonChanging(long value);
    partial void OnTaxonChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public TaxonomicRankingTable()
		{
			this._TaxonomicRankingRelationshipTables = new EntitySet<TaxonomicRankingRelationshipTable>(new Action<TaxonomicRankingRelationshipTable>(this.attach_TaxonomicRankingRelationshipTables), new Action<TaxonomicRankingRelationshipTable>(this.detach_TaxonomicRankingRelationshipTables));
			this._TaxonomicRankingTables = new EntitySet<TaxonomicRankingTable>(new Action<TaxonomicRankingTable>(this.attach_TaxonomicRankingTables), new Action<TaxonomicRankingTable>(this.detach_TaxonomicRankingTables));
			this._TaxonTable = default(EntityRef<TaxonTable>);
			this._TaxonomicRankingTable1 = default(EntityRef<TaxonomicRankingTable>);
			this._TaxonomicRankTable = default(EntityRef<TaxonomicRankTable>);
			this._TaxonomyTable = default(EntityRef<TaxonomyTable>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_Taxonomy", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Taxonomy
		{
			get
			{
				return this._Taxonomy;
			}
			set
			{
				if ((this._Taxonomy != value))
				{
					if (this._TaxonomicRankingTable1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxonomyChanging(value);
					this.SendPropertyChanging();
					this._Taxonomy = value;
					this.SendPropertyChanged("Taxonomy");
					this.OnTaxonomyChanged();
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="BigInt")]
		public System.Nullable<long> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._TaxonomicRankingTable1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					if (this._TaxonomicRankTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_Taxon", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Taxon
		{
			get
			{
				return this._Taxon;
			}
			set
			{
				if ((this._Taxon != value))
				{
					if (this._TaxonTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxonChanging(value);
					this.SendPropertyChanging();
					this._Taxon = value;
					this.SendPropertyChanged("Taxon");
					this.OnTaxonChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		[Association(Name="TaxonomicRankingTable_TaxonomicRankingRelationshipTable", Storage="_TaxonomicRankingRelationshipTables", ThisKey="ID", OtherKey="TaxonomicRanking")]
		public EntitySet<TaxonomicRankingRelationshipTable> TaxonomicRankingRelationshipTables
		{
			get
			{
				return this._TaxonomicRankingRelationshipTables;
			}
			set
			{
				this._TaxonomicRankingRelationshipTables.Assign(value);
			}
		}
		
		[Association(Name="TaxonomicRankingTable_TaxonomicRankingTable", Storage="_TaxonomicRankingTables", ThisKey="Taxonomy,ID", OtherKey="Taxonomy,Parent")]
		public EntitySet<TaxonomicRankingTable> TaxonomicRankingTables
		{
			get
			{
				return this._TaxonomicRankingTables;
			}
			set
			{
				this._TaxonomicRankingTables.Assign(value);
			}
		}
		
		[Association(Name="TaxonTable_TaxonomicRankingTable", Storage="_TaxonTable", ThisKey="Taxon", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TaxonTable TaxonTable
		{
			get
			{
				return this._TaxonTable.Entity;
			}
			set
			{
				TaxonTable previousValue = this._TaxonTable.Entity;
				if (((previousValue != value) 
							|| (this._TaxonTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaxonTable.Entity = null;
						previousValue.TaxonomicRankingTables.Remove(this);
					}
					this._TaxonTable.Entity = value;
					if ((value != null))
					{
						value.TaxonomicRankingTables.Add(this);
						this._Taxon = value.ID;
					}
					else
					{
						this._Taxon = default(long);
					}
					this.SendPropertyChanged("TaxonTable");
				}
			}
		}
		
		[Association(Name="TaxonomicRankingTable_TaxonomicRankingTable", Storage="_TaxonomicRankingTable1", ThisKey="Taxonomy,Parent", OtherKey="Taxonomy,ID", IsForeignKey=true)]
		public TaxonomicRankingTable TaxonomicRankingTable1
		{
			get
			{
				return this._TaxonomicRankingTable1.Entity;
			}
			set
			{
				TaxonomicRankingTable previousValue = this._TaxonomicRankingTable1.Entity;
				if (((previousValue != value) 
							|| (this._TaxonomicRankingTable1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaxonomicRankingTable1.Entity = null;
						previousValue.TaxonomicRankingTables.Remove(this);
					}
					this._TaxonomicRankingTable1.Entity = value;
					if ((value != null))
					{
						value.TaxonomicRankingTables.Add(this);
						this._Taxonomy = value.Taxonomy;
						this._Parent = value.ID;
					}
					else
					{
						this._Taxonomy = default(long);
						this._Parent = default(Nullable<long>);
					}
					this.SendPropertyChanged("TaxonomicRankingTable1");
				}
			}
		}
		
		[Association(Name="TaxonomicRankTable_TaxonomicRankingTable", Storage="_TaxonomicRankTable", ThisKey="Taxonomy,Rank", OtherKey="Taxonomy,ID", IsForeignKey=true)]
		public TaxonomicRankTable TaxonomicRankTable
		{
			get
			{
				return this._TaxonomicRankTable.Entity;
			}
			set
			{
				TaxonomicRankTable previousValue = this._TaxonomicRankTable.Entity;
				if (((previousValue != value) 
							|| (this._TaxonomicRankTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaxonomicRankTable.Entity = null;
						previousValue.TaxonomicRankingTables.Remove(this);
					}
					this._TaxonomicRankTable.Entity = value;
					if ((value != null))
					{
						value.TaxonomicRankingTables.Add(this);
						this._Taxonomy = value.Taxonomy;
						this._Rank = value.ID;
					}
					else
					{
						this._Taxonomy = default(long);
						this._Rank = default(long);
					}
					this.SendPropertyChanged("TaxonomicRankTable");
				}
			}
		}
		
		[Association(Name="TaxonomyTable_TaxonomicRankingTable", Storage="_TaxonomyTable", ThisKey="Taxonomy", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TaxonomyTable TaxonomyTable
		{
			get
			{
				return this._TaxonomyTable.Entity;
			}
			set
			{
				TaxonomyTable previousValue = this._TaxonomyTable.Entity;
				if (((previousValue != value) 
							|| (this._TaxonomyTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaxonomyTable.Entity = null;
						previousValue.TaxonomicRankingTables.Remove(this);
					}
					this._TaxonomyTable.Entity = value;
					if ((value != null))
					{
						value.TaxonomicRankingTables.Add(this);
						this._Taxonomy = value.ID;
					}
					else
					{
						this._Taxonomy = default(long);
					}
					this.SendPropertyChanged("TaxonomyTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaxonomicRankingRelationshipTables(TaxonomicRankingRelationshipTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonomicRankingTable = this;
		}
		
		private void detach_TaxonomicRankingRelationshipTables(TaxonomicRankingRelationshipTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonomicRankingTable = null;
		}
		
		private void attach_TaxonomicRankingTables(TaxonomicRankingTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonomicRankingTable1 = this;
		}
		
		private void detach_TaxonomicRankingTables(TaxonomicRankingTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonomicRankingTable1 = null;
		}
	}
	
	[Table(Name="Taxonomy.TaxonomicRankTable")]
	public partial class TaxonomicRankTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private long _Taxonomy;
		
		private System.Nullable<long> _Parent;
		
		private string _Name;
		
		private string _Description;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private EntitySet<TaxonomicRankingTable> _TaxonomicRankingTables;
		
		private EntitySet<TaxonomicRankTable> _TaxonomicRankTables;
		
		private EntityRef<TaxonomicRankTable> _TaxonomicRankTable1;
		
		private EntityRef<TaxonomyTable> _TaxonomyTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnTaxonomyChanging(long value);
    partial void OnTaxonomyChanged();
    partial void OnParentChanging(System.Nullable<long> value);
    partial void OnParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public TaxonomicRankTable()
		{
			this._TaxonomicRankingTables = new EntitySet<TaxonomicRankingTable>(new Action<TaxonomicRankingTable>(this.attach_TaxonomicRankingTables), new Action<TaxonomicRankingTable>(this.detach_TaxonomicRankingTables));
			this._TaxonomicRankTables = new EntitySet<TaxonomicRankTable>(new Action<TaxonomicRankTable>(this.attach_TaxonomicRankTables), new Action<TaxonomicRankTable>(this.detach_TaxonomicRankTables));
			this._TaxonomicRankTable1 = default(EntityRef<TaxonomicRankTable>);
			this._TaxonomyTable = default(EntityRef<TaxonomyTable>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_Taxonomy", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Taxonomy
		{
			get
			{
				return this._Taxonomy;
			}
			set
			{
				if ((this._Taxonomy != value))
				{
					if (this._TaxonomicRankTable1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxonomyChanging(value);
					this.SendPropertyChanging();
					this._Taxonomy = value;
					this.SendPropertyChanged("Taxonomy");
					this.OnTaxonomyChanged();
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="BigInt")]
		public System.Nullable<long> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._TaxonomicRankTable1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		[Association(Name="TaxonomicRankTable_TaxonomicRankingTable", Storage="_TaxonomicRankingTables", ThisKey="Taxonomy,ID", OtherKey="Taxonomy,Rank")]
		public EntitySet<TaxonomicRankingTable> TaxonomicRankingTables
		{
			get
			{
				return this._TaxonomicRankingTables;
			}
			set
			{
				this._TaxonomicRankingTables.Assign(value);
			}
		}
		
		[Association(Name="TaxonomicRankTable_TaxonomicRankTable", Storage="_TaxonomicRankTables", ThisKey="Taxonomy,ID", OtherKey="Taxonomy,Parent")]
		public EntitySet<TaxonomicRankTable> TaxonomicRankTables
		{
			get
			{
				return this._TaxonomicRankTables;
			}
			set
			{
				this._TaxonomicRankTables.Assign(value);
			}
		}
		
		[Association(Name="TaxonomicRankTable_TaxonomicRankTable", Storage="_TaxonomicRankTable1", ThisKey="Taxonomy,Parent", OtherKey="Taxonomy,ID", IsForeignKey=true)]
		public TaxonomicRankTable TaxonomicRankTable1
		{
			get
			{
				return this._TaxonomicRankTable1.Entity;
			}
			set
			{
				TaxonomicRankTable previousValue = this._TaxonomicRankTable1.Entity;
				if (((previousValue != value) 
							|| (this._TaxonomicRankTable1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaxonomicRankTable1.Entity = null;
						previousValue.TaxonomicRankTables.Remove(this);
					}
					this._TaxonomicRankTable1.Entity = value;
					if ((value != null))
					{
						value.TaxonomicRankTables.Add(this);
						this._Taxonomy = value.Taxonomy;
						this._Parent = value.ID;
					}
					else
					{
						this._Taxonomy = default(long);
						this._Parent = default(Nullable<long>);
					}
					this.SendPropertyChanged("TaxonomicRankTable1");
				}
			}
		}
		
		[Association(Name="TaxonomyTable_TaxonomicRankTable", Storage="_TaxonomyTable", ThisKey="Taxonomy", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TaxonomyTable TaxonomyTable
		{
			get
			{
				return this._TaxonomyTable.Entity;
			}
			set
			{
				TaxonomyTable previousValue = this._TaxonomyTable.Entity;
				if (((previousValue != value) 
							|| (this._TaxonomyTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaxonomyTable.Entity = null;
						previousValue.TaxonomicRankTables.Remove(this);
					}
					this._TaxonomyTable.Entity = value;
					if ((value != null))
					{
						value.TaxonomicRankTables.Add(this);
						this._Taxonomy = value.ID;
					}
					else
					{
						this._Taxonomy = default(long);
					}
					this.SendPropertyChanged("TaxonomyTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaxonomicRankingTables(TaxonomicRankingTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonomicRankTable = this;
		}
		
		private void detach_TaxonomicRankingTables(TaxonomicRankingTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonomicRankTable = null;
		}
		
		private void attach_TaxonomicRankTables(TaxonomicRankTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonomicRankTable1 = this;
		}
		
		private void detach_TaxonomicRankTables(TaxonomicRankTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonomicRankTable1 = null;
		}
	}
	
	[Table(Name="Taxonomy.TaxonomyTable")]
	public partial class TaxonomyTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private string _Name;
		
		private string _Description;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private EntitySet<TaxonomicRankingTable> _TaxonomicRankingTables;
		
		private EntitySet<TaxonomicRankTable> _TaxonomicRankTables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public TaxonomyTable()
		{
			this._TaxonomicRankingTables = new EntitySet<TaxonomicRankingTable>(new Action<TaxonomicRankingTable>(this.attach_TaxonomicRankingTables), new Action<TaxonomicRankingTable>(this.detach_TaxonomicRankingTables));
			this._TaxonomicRankTables = new EntitySet<TaxonomicRankTable>(new Action<TaxonomicRankTable>(this.attach_TaxonomicRankTables), new Action<TaxonomicRankTable>(this.detach_TaxonomicRankTables));
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		[Association(Name="TaxonomyTable_TaxonomicRankingTable", Storage="_TaxonomicRankingTables", ThisKey="ID", OtherKey="Taxonomy")]
		public EntitySet<TaxonomicRankingTable> TaxonomicRankingTables
		{
			get
			{
				return this._TaxonomicRankingTables;
			}
			set
			{
				this._TaxonomicRankingTables.Assign(value);
			}
		}
		
		[Association(Name="TaxonomyTable_TaxonomicRankTable", Storage="_TaxonomicRankTables", ThisKey="ID", OtherKey="Taxonomy")]
		public EntitySet<TaxonomicRankTable> TaxonomicRankTables
		{
			get
			{
				return this._TaxonomicRankTables;
			}
			set
			{
				this._TaxonomicRankTables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaxonomicRankingTables(TaxonomicRankingTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonomyTable = this;
		}
		
		private void detach_TaxonomicRankingTables(TaxonomicRankingTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonomyTable = null;
		}
		
		private void attach_TaxonomicRankTables(TaxonomicRankTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonomyTable = this;
		}
		
		private void detach_TaxonomicRankTables(TaxonomicRankTable entity)
		{
			this.SendPropertyChanging();
			entity.TaxonomyTable = null;
		}
	}
	
	[Table(Name="Taxonomy.TaxonRelationshipTable")]
	public partial class TaxonRelationshipTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _VFX_CreatorID;
		
		private long _VFX_UpdaterID;
		
		private System.Nullable<long> _VFX_DeletorID;
		
		private System.DateTime _VFX_DateCreated;
		
		private System.DateTime _VFX_DateUpdated;
		
		private System.Nullable<System.DateTime> _VFX_DateDeleted;
		
		private long _Taxon;
		
		private long _Target;
		
		private float _Weight;
		
		private string _ETL_NaturalKey;
		
		private System.Data.Linq.Binary _ETL_Hash;
		
		private string _ETL_JobCategory;
		
		private System.Nullable<System.DateTime> _ETL_DateEffective;
		
		private EntityRef<TaxonTable> _TaxonTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVFX_CreatorIDChanging(long value);
    partial void OnVFX_CreatorIDChanged();
    partial void OnVFX_UpdaterIDChanging(long value);
    partial void OnVFX_UpdaterIDChanged();
    partial void OnVFX_DeletorIDChanging(System.Nullable<long> value);
    partial void OnVFX_DeletorIDChanged();
    partial void OnVFX_DateCreatedChanging(System.DateTime value);
    partial void OnVFX_DateCreatedChanged();
    partial void OnVFX_DateUpdatedChanging(System.DateTime value);
    partial void OnVFX_DateUpdatedChanged();
    partial void OnVFX_DateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnVFX_DateDeletedChanged();
    partial void OnTaxonChanging(long value);
    partial void OnTaxonChanged();
    partial void OnTargetChanging(long value);
    partial void OnTargetChanged();
    partial void OnWeightChanging(float value);
    partial void OnWeightChanged();
    partial void OnETL_NaturalKeyChanging(string value);
    partial void OnETL_NaturalKeyChanged();
    partial void OnETL_HashChanging(System.Data.Linq.Binary value);
    partial void OnETL_HashChanged();
    partial void OnETL_JobCategoryChanging(string value);
    partial void OnETL_JobCategoryChanged();
    partial void OnETL_DateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnETL_DateEffectiveChanged();
    #endregion
		
		public TaxonRelationshipTable()
		{
			this._TaxonTable = default(EntityRef<TaxonTable>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_CreatorID", DbType="BigInt NOT NULL")]
		public long VFX_CreatorID
		{
			get
			{
				return this._VFX_CreatorID;
			}
			set
			{
				if ((this._VFX_CreatorID != value))
				{
					this.OnVFX_CreatorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_CreatorID = value;
					this.SendPropertyChanged("VFX_CreatorID");
					this.OnVFX_CreatorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_UpdaterID", DbType="BigInt NOT NULL")]
		public long VFX_UpdaterID
		{
			get
			{
				return this._VFX_UpdaterID;
			}
			set
			{
				if ((this._VFX_UpdaterID != value))
				{
					this.OnVFX_UpdaterIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_UpdaterID = value;
					this.SendPropertyChanged("VFX_UpdaterID");
					this.OnVFX_UpdaterIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DeletorID", DbType="BigInt")]
		public System.Nullable<long> VFX_DeletorID
		{
			get
			{
				return this._VFX_DeletorID;
			}
			set
			{
				if ((this._VFX_DeletorID != value))
				{
					this.OnVFX_DeletorIDChanging(value);
					this.SendPropertyChanging();
					this._VFX_DeletorID = value;
					this.SendPropertyChanged("VFX_DeletorID");
					this.OnVFX_DeletorIDChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateCreated
		{
			get
			{
				return this._VFX_DateCreated;
			}
			set
			{
				if ((this._VFX_DateCreated != value))
				{
					this.OnVFX_DateCreatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateCreated = value;
					this.SendPropertyChanged("VFX_DateCreated");
					this.OnVFX_DateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime VFX_DateUpdated
		{
			get
			{
				return this._VFX_DateUpdated;
			}
			set
			{
				if ((this._VFX_DateUpdated != value))
				{
					this.OnVFX_DateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateUpdated = value;
					this.SendPropertyChanged("VFX_DateUpdated");
					this.OnVFX_DateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_VFX_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> VFX_DateDeleted
		{
			get
			{
				return this._VFX_DateDeleted;
			}
			set
			{
				if ((this._VFX_DateDeleted != value))
				{
					this.OnVFX_DateDeletedChanging(value);
					this.SendPropertyChanging();
					this._VFX_DateDeleted = value;
					this.SendPropertyChanged("VFX_DateDeleted");
					this.OnVFX_DateDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_Taxon", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Taxon
		{
			get
			{
				return this._Taxon;
			}
			set
			{
				if ((this._Taxon != value))
				{
					if (this._TaxonTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxonChanging(value);
					this.SendPropertyChanging();
					this._Taxon = value;
					this.SendPropertyChanged("Taxon");
					this.OnTaxonChanged();
				}
			}
		}
		
		[Column(Storage="_Target", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[Column(Storage="_Weight", DbType="Real NOT NULL")]
		public float Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_NaturalKey", DbType="VarChar(256)")]
		public string ETL_NaturalKey
		{
			get
			{
				return this._ETL_NaturalKey;
			}
			set
			{
				if ((this._ETL_NaturalKey != value))
				{
					this.OnETL_NaturalKeyChanging(value);
					this.SendPropertyChanging();
					this._ETL_NaturalKey = value;
					this.SendPropertyChanged("ETL_NaturalKey");
					this.OnETL_NaturalKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_Hash", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ETL_Hash
		{
			get
			{
				return this._ETL_Hash;
			}
			set
			{
				if ((this._ETL_Hash != value))
				{
					this.OnETL_HashChanging(value);
					this.SendPropertyChanging();
					this._ETL_Hash = value;
					this.SendPropertyChanged("ETL_Hash");
					this.OnETL_HashChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_JobCategory", DbType="VarChar(50)")]
		public string ETL_JobCategory
		{
			get
			{
				return this._ETL_JobCategory;
			}
			set
			{
				if ((this._ETL_JobCategory != value))
				{
					this.OnETL_JobCategoryChanging(value);
					this.SendPropertyChanging();
					this._ETL_JobCategory = value;
					this.SendPropertyChanged("ETL_JobCategory");
					this.OnETL_JobCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ETL_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETL_DateEffective
		{
			get
			{
				return this._ETL_DateEffective;
			}
			set
			{
				if ((this._ETL_DateEffective != value))
				{
					this.OnETL_DateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ETL_DateEffective = value;
					this.SendPropertyChanged("ETL_DateEffective");
					this.OnETL_DateEffectiveChanged();
				}
			}
		}
		
		[Association(Name="TaxonTable_TaxonRelationshipTable", Storage="_TaxonTable", ThisKey="Taxon", OtherKey="ID", IsForeignKey=true)]
		public TaxonTable TaxonTable
		{
			get
			{
				return this._TaxonTable.Entity;
			}
			set
			{
				TaxonTable previousValue = this._TaxonTable.Entity;
				if (((previousValue != value) 
							|| (this._TaxonTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaxonTable.Entity = null;
						previousValue.TaxonRelationshipTables.Remove(this);
					}
					this._TaxonTable.Entity = value;
					if ((value != null))
					{
						value.TaxonRelationshipTables.Add(this);
						this._Taxon = value.ID;
					}
					else
					{
						this._Taxon = default(long);
					}
					this.SendPropertyChanged("TaxonTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
